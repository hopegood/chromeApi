<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>groupId</groupId>
    <artifactId>chromeApi</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>7</maven.compiler.source>
        <maven.compiler.target>7</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
        </dependency>
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>1.6.1</version>
            <scope>system</scope>
            <systemPath>${basedir}/dom4j-1.6.1.jar</systemPath>
        </dependency>
    </dependencies>
    <build>
    <plugins>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.3.2</version>
            <configuration>
                <source>1.7</source>
                <target>1.7</target>
                <encoding>UTF-8</encoding>
            </configuration>
        </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>2.4</version>
            <executions>
                <execution>
                    <id>default-jar</id>
                    <phase>package</phase>
                    <goals>
                        <goal>jar</goal>
                    </goals>
                    <configuration>
                        <archive>
                            <!--生成的jar中，不要包含pom.xml和pom.properties这两个文件-->
                            <addMavenDescriptor>false</addMavenDescriptor>
                            <manifest>
                                <!--是否要把第三方jar放到manifest的classpath中-->
                                <addClasspath>false</addClasspath>
                                <!--生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/-->
                                <classpathPrefix>lib/</classpathPrefix>
                                <!--应用的main class-->
                                <mainClass>com.ab.ls.q100.LoginFrame</mainClass>
                            </manifest>
                        </archive>
                        <!-- jar包的位置 -->
                        <!--<outputDirectory>${project.build.directory}/lib</outputDirectory>-->
                        <!--过滤掉不希望包含在jar中的文件-->
                        <!--<excludes>
                           <exclude>${project.basedir}/resources/*</exclude>
                        </excludes>-->
                        <includes>
                            <!-- 打jar包时，打包class文件和config目录下面的 properties文件 -->
                            <!-- 有时候可能需要一些其他文件，这边可以配置，包括剔除的文件等等 -->
                            <include>**/*.class</include>
                            <include>**/res/**</include>
                        </includes>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <!-- Allatori plugin start -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>2.6</version>
            <configuration>
                <encoding>UTF-8</encoding>
            </configuration>
            <executions>
                <execution>
                    <id>copy-and-filter-allatori-config</id>
                    <phase>package</phase>
                    <goals>
                        <goal>copy-resources</goal>
                    </goals>
                    <configuration>
                        <outputDirectory>${project.build.directory}</outputDirectory>
                        <resources>
                            <resource>
                                <directory>${basedir}/allatori</directory>
                                <includes>
                                    <include>config.xml</include>
                                </includes>
                                <filtering>true</filtering>
                            </resource>
                        </resources>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
                <execution>
                    <id>run-allatori</id>
                    <phase>package</phase>
                    <goals>
                        <goal>exec</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <executable>java</executable>
                <arguments>
                    <argument>-Xms128m</argument>
                    <argument>-Xmx512m</argument>
                    <argument>-jar</argument>
                    <argument>${basedir}/lib/allatori.jar</argument>
                    <argument>${project.build.directory}/config.xml</argument>
                </arguments>
            </configuration>
        </plugin>
    </plugins>
    </build>
</project>